/*

 bootpag - jQuery plugin for dynamic pagination

 Copyright (c) 2015 botmonster@7items.com

 Licensed under the MIT license:
   http://www.opensource.org/licenses/mit-license.php

 Project home:
   http://botmonster.com/jquery-bootpag/

 Version:  1.0.7

*/
(function (h, q) {
  h.fn.bootpag = function (p) {
    function m(c, b) {
      b = parseInt(b, 10);
      let d;
        let e = a.maxVisible == 0 ? 1 : a.maxVisible;
        let k = a.maxVisible == 1 ? 0 : 1;
        const n = Math.floor((b - 1) / e) * e;
        const f = c.find("li");
      a.page = b = b < 0 ? 0 : b > a.total ? a.total : b;
      f.removeClass(a.activeClass);
      d =
        b - 1 < 1
          ? 1
          : a.leaps && b - 1 >= a.maxVisible
          ? Math.floor((b - 1) / e) * e
          : b - 1;
      a.firstLastUse && f.first().toggleClass(a.disabledClass, b === 1);
      e = f.first();
      a.firstLastUse && (e = e.next());
      e.toggleClass(a.disabledClass, b === 1)
        .attr("data-lp", d)
        .find("a")
        .attr("href", g(d));
      k = a.maxVisible == 1 ? 0 : 1;
      d =
        b + 1 > a.total
          ? a.total
          : a.leaps && b + 1 < a.total - a.maxVisible
          ? n + a.maxVisible + k
          : b + 1;
      e = f.last();
      a.firstLastUse && (e = e.prev());
      e.toggleClass(a.disabledClass, b === a.total)
        .attr("data-lp", d)
        .find("a")
        .attr("href", g(d));
      f.last().toggleClass(a.disabledClass, b === a.total);
      e = f.filter(`[data-lp=${b}]`);
      k =
        `.${[a.nextClass, a.prevClass, a.firstClass, a.lastClass].join(",.")}`;
      if (!e.not(k).length) {
        const m = b <= n ? -a.maxVisible : 0;
        f.not(k).each(function (b) {
          d = b + 1 + n + m;
          h(this)
            .attr("data-lp", d)
            .toggle(d <= a.total)
            .find("a")
            .html(d)
            .attr("href", g(d));
        });
        e = f.filter(`[data-lp=${b}]`);
      }
      e.not(k).addClass(a.activeClass);
      l.data("settings", a);
    }
    function g(c) {
      return a.href.replace(a.hrefVariable, c);
    }
    var l = this;
      var a = h.extend(
        {
          total: 0,
          page: 1,
          maxVisible: null,
          leaps: !0,
          href: "javascript:void(0);",
          hrefVariable: "{{number}}",
          next: "&raquo;",
          prev: "&laquo;",
          firstLastUse: !1,
          first: '<span aria-hidden="true">&larr;</span>',
          last: '<span aria-hidden="true">&rarr;</span>',
          wrapClass: "pagination",
          activeClass: "active",
          disabledClass: "disabled",
          nextClass: "next",
          prevClass: "prev",
          lastClass: "last",
          firstClass: "first",
        },
        l.data("settings") || {},
        p || {}
      );
    if (a.total <= 0) return this;
    h.isNumeric(a.maxVisible) ||
      a.maxVisible ||
      (a.maxVisible = parseInt(a.total, 10));
    l.data("settings", a);
    return this.each(function () {
      let c;
        let b;
        const d = h(this);
      c = ['<ul class="', a.wrapClass, ' bootpag">'];
      a.firstLastUse &&
        (c = c.concat([
          '<li data-lp="1" class="',
          a.firstClass,
          '"><a href="',
          g(1),
          '">',
          a.first,
          "</a></li>",
        ]));
      a.prev &&
        (c = c.concat([
          '<li data-lp="1" class="',
          a.prevClass,
          '"><a href="',
          g(1),
          '">',
          a.prev,
          "</a></li>",
        ]));
      for (b = 1; b <= Math.min(a.total, a.maxVisible); b++)
        c = c.concat([
          '<li data-lp="',
          b,
          '"><a href="',
          g(b),
          '">',
          b,
          "</a></li>",
        ]);
      a.next &&
        ((b =
          a.leaps && a.total > a.maxVisible
            ? Math.min(a.maxVisible + 1, a.total)
            : 2),
        (c = c.concat([
          '<li data-lp="',
          b,
          '" class="',
          a.nextClass,
          '"><a href="',
          g(b),
          '">',
          a.next,
          "</a></li>",
        ])));
      a.firstLastUse &&
        (c = c.concat([
          '<li data-lp="',
          a.total,
          '" class="last"><a href="',
          g(a.total),
          '">',
          a.last,
          "</a></li>",
        ]));
      c.push("</ul>");
      d.find("ul.bootpag").remove();
      d.append(c.join(""));
      c = d.find("ul.bootpag");
      d.find("li").click(function () {
        const b = h(this);
        if (!b.hasClass(a.disabledClass) && !b.hasClass(a.activeClass)) {
          const c = parseInt(b.attr("data-lp"), 10);
          l.find("ul.bootpag").each(function () {
            m(h(this), c);
          });
          l.trigger("page", c);
        }
      });
      m(c, a.page);
    });
  };
})(jQuery, window);
